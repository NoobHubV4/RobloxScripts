local Library = loadstring(Game:HttpGet('https://raw.githubusercontent.com/NoobHubV1/NoobHubV1/main/Wizard%20Lib.lua'))()
local Window = Library:NewWindow("Merge Brainrot")
local Rstorage = game.ReplicatedStorage
local Main = Window:NewSection("Main")
local Main2 = Window:NewSection("Main 2")
local Spam = false
Main:CreateTextbox("Add Cash", function(value)
     Rstorage.Remotes.AddValueEvent:FireServer("Cash", tonumber(value))
end)
Main:CreateTextbox("Add Gem", function(value)
     Rstorage.Remotes.GemEvent:FireServer(tonumber(value))
end)
Main:CreateButton("Unlock All Brainrot", function()
     Rstorage.Remotes.UpdateBestBlockEvent:FireServer(100)
end)
Main:CreateButton("1M Max Pets", function()
     Rstorage.Remotes.MultiplierEvent:FireServer("MaxPets", 1000000)
end)
Main:CreateButton("100K Max Block", function()
     Rstorage.Remotes.UpgradeEvent:FireServer("MaxBlocksLevel", 100000, 0)
end)
Main:CreateButton("1Qn Cash Multiplier", function()
     Rstorage.Remotes.MultiplierEvent:FireServer("CashMultiplier", 1e18)
end)
Main:CreateButton("100K Spawn Rate Level", function()
     Rstorage.Remotes.UpgradeEvent:FireServer("SpawnRateLevel", 100000, 0)
end)
Main:CreateButton("1M Lucky Merge Level", function()
     Rstorage.Remotes.UpgradeEvent:FireServer("LuckyMergeLevel", 1000000, 0)
end)
Main:CreateButton("100K Auto Merge Level", function()
     Rstorage.Remotes.UpgradeEvent:FireServer("AutoMergeLevel", 100000, 0)
end)
Main:CreateButton("100K Cash Rate Level", function()
     Rstorage.Remotes.UpgradeEvent:FireServer("CashRateLevel", 100000, 0)
end)
Main:CreateButton("100 Spawn Tier Level", function()
     Rstorage.Remotes.UpgradeEvent:FireServer("SpawnTierLevel", 100, 0)
end)
Main2:CreateToggle("Spam Rebirth", function(v)
     Spam = v
     Stepped = game.RunService.Stepped:Connect(function()
          if Spam then
               game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("RebirthConfirmEvent"):FireServer(0, 0, 1e18)
          elseif not Spam then
               Stepped:Disconnect()
          end
     end)
end)
