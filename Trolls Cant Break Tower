local Prefix = ";"
local Players = game.Players
local LocalPlayer = Players.LocalPlayer
local Unloaded = true

local Notif = function(Title, Text, Duration)
	local Duration = Duration
	if not Duration then
		Duration = 3
	end
	game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = Title;
		Text = Text;
		Icon = "";
		Duration = Duration;
	})
end

Notif("Check", "Check Id game", 3)
if game.PlaceId == 14493533447 then
       Unloaded = false
       Notif("Successfully", "Game Support", 10)
else
       Notif("Error", "Game Not Support")
end

if Unloaded == false then
local Loops = {
      Slaping = {};
};
local API = {
      Whitelisted = {};
};
local Saved = {
      SlapDebounce = {};
};
local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
ScreenGui.Name = "ScreenGui"
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
local TextBox = Instance.new("TextBox", ScreenGui)
TextBox.Name = "TextBox"
TextBox.BackgroundColor3 = Color3.fromRGB(172, 172, 172)
TextBox.BackgroundTransparency = 0.400
TextBox.Position = UDim2.new(0.0255349874, 0, 0.800595582, 0)
TextBox.Size = UDim2.new(0, 278, 0, 33)
TextBox.Font = Enum.Font.SourceSans
TextBox.PlaceholderText = "Command Bar"
TextBox.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
TextBox.Text = ""
TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
TextBox.TextSize = 23.000
TextBox.Draggable = true
TextBox.ClearTextOnFocus = false

local PlrFromArgs = function(plr)
	local function findPlayer(stringg)
	        if (stringg == ("me")) then
			return LocalPlayer
		elseif (stringg == ("random")) then
			local GetPlayers = Players:GetPlayers()
			if table.find(GetPlayers,Player) then table.remove(GetPlayers,table.find(GetPlayers,Player)) end
			return GetPlayers[math.random(#GetPlayers)]
		else
			for _, v in pairs(Players:GetPlayers()) do
				if (stringg:lower() == (v.Name:lower()):sub(1, #stringg)) or (stringg:lower() == (v.DisplayName:lower()):sub(1, #stringg)) then 
					return v 
				end
			end
		end
	end
	return findPlayer(plr)
end

local RTPing = function(value)
	if value then
		task.wait(value)
	end
	local RT1 = tick()
	local RT2 = tick()
	local RoundTrip = (RT2-RT1) * 1000
	return RoundTrip
end

local CPing = function(ConvertToHuman, OneWayTrip)
	if ConvertToHuman then
		return OneWayTrip and LocalPlayer:GetNetworkPing() * 1000 or game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValue()
	else
		return OneWayTrip and LocalPlayer:GetNetworkPing() or game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValue() / 1000
	end
end

function getEvent()
        local char = LocalPlayer.Character
        local back = LocalPlayer.Backpack

        local tool = char:FindFirstChild("GoldSlapTool") or char:FindFirstChild("BlueSlapTool") or back:FindFirstChild("GoldSlapTool") or back:FindFirstChild("BlueSlapTool")
        if not tool then
              return Notif("Error", "Not Slap", 3)
        elseif tool and tool:FindFirstChild("Event") then
              return tool.Event
        end
end
        

function Slap(Player)
        local targetPart = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
        local Event = getEvent()
        if Event then
             if targetPart then
                    Event:FireServer("slash", Player.Character, targetPart.Position, Vector3.new(0, 500000, 0))
                    if targetPart and targetPart.Parent:FindFirstChild("BodyVelocity") == nil then

                        local bodyVelocity = Instance.new("BodyVelocity")

                            bodyVelocity.MaxForce = Vector3.new(0, math.huge, 0)

                            bodyVelocity.Velocity = Vector3.new(0, SLAP_POWER, 0)

                            bodyVelocity.Parent = targetPart

                            game.Debris:AddItem(bodyVelocity, 0.5)

                    end
              end
       end
end

function SlapAll()
   local Event = getEvent()
   for _,Player in pairs(game.Players:GetPlayers()) do
     if Player ~= LocalPlayer and not table.find(API.Whitelisted,Player) then
        local targetPart = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
        if Event then
             if targetPart then
                    Event:FireServer("slash", Player.Character, targetPart.Position, Vector3.new(0, 500000, 0))
                    if targetPart and targetPart.Parent:FindFirstChild("BodyVelocity") == nil then

                        local bodyVelocity = Instance.new("BodyVelocity")

                            bodyVelocity.MaxForce = Vector3.new(0, math.huge, 0)

                            bodyVelocity.Velocity = Vector3.new(0, SLAP_POWER, 0)

                            bodyVelocity.Parent = targetPart

                            game.Debris:AddItem(bodyVelocity, 0.5)

                    end
              end
       end
    end
  end
end
function OnCommand(text)
        local Args = text:split(" ")
	if Args[1] == "/e" or Args[1] == "/c" or Args[1] == "/t" or Args[1] == "/" then
		table.remove(Args, 1)
	end
	if Args[1] == "/w" then
		table.remove(Args, 1)
		if Args[2] then
			table.remove(Args, 1)
		end
	end
	local function cm(args)
		return args == Args[1]:sub(#Prefix+1):lower()
	end
        if cm("slap") then
                local DaPlayer = PlrFromArgs(Args[2])
                if DaPlayer then
                        Slap(DaPlayer)
                        Notif("Successfully", "Slap "..DaPlayer.Name)
                end
                local ar = Args[2] and Args[2]:lower()
                if ar == "all" then
                        SlapAll()
                        Notif("Successfully", "Slap All")
                elseif not DaPlayer then
                        Notif("Error", "Not Player in Server")
                end
        elseif cm("loopslap") then
                local DaPlayer = PlrFromArgs(Args[2])
                if not table.find(Loops.Slaping,DaPlayer.Name) then
                        table.insert(Loops.Slaping,DaPlayer.Name)
                        Notif("Successfully", "Loop Slap "..DaPlayer.Name)
                end
                local ar = Args[2] and Args[2]:lower()
                if ar == "all" then
                        Loops.SlapAll = true
                        Notif("Successfully", "Loop Slap All")
                elseif not DaPlayer then
                        Notif("Error", "Not Player in Server")
                end
        elseif cm("unloopslap") then
                local DaPlayer = PlrFromArgs(Args[2])
                if table.find(Loops.Slaping,DaPlayer.Name) then
                        table.remove(Loops.Slaping,table.find(Loops.Slaping,DaPlayer.Name))
                        Notif("Successfully", "Loop Slap "..DaPlayer.Name)
                end
                local ar = Args[2] and Args[2]:lower()
                if ar == "all" then
                        Loops.SlapAll = true
                        Notif("Successfully", "Loop Slap All")
                elseif not DaPlayer then
                        Notif("Error", "Not Player in Server")
                end
        elseif cm("whitelist") or cm("wl") then
                local DaPlayer = PlrFromArgs(Args[2])
                if not table.find(API.Whitelisted,DaPlayer.Name) then
                        table.insert(API.Whitelisted,DaPlayer.Name)
                        Notif("Successfully", "Whitelist "..DaPlayer.Name)
                elseif not DaPlayer then
                        Notif("Error", "Not Player in Server")
                end
        elseif cm("unwhitelist") or cm("unwl") then
                local DaPlayer = PlrFromArgs(Args[2])
                if table.find(API.Whitelisted,DaPlayer.Name) then
                        table.remove(API.Whitelisted,table.find(API.Whitelisted,DaPlayer.Name))
                        Notif("Successfully", "Blacklist "..DaPlayer.Name)
                elseif not DaPlayer then
                        Notif("Error", "Not Player in Server")
                end
        else
                Notif("Error", tostring(Args[1]) .. " is not a valid command.")
        end
end
LocalPlayer.Chatted:Connect(function(t)
	local Subbed = string.sub(t,1,1)
        if Subbed == Prefix then
                OnCommand(t)
        end
end)
TextBox.FocusLost:Connect(function(enterPressed, inputObj)
	if TextBox.Text == "" then
		return
	end
	if enterPressed then
		local success, errors = pcall(function()
			if string.sub(TextBox.Text, 0, 1) == Prefix then
				OnCommand(TextBox.Text)
			else
				OnCommand(Prefix .. TextBox.Text)
			end
		end)
		if not success then
			dewarn("NoobHubV4_Error: " .. tostring(errors) .. ".")
		end
		task.wait(.2)
		TextBox.Text = ""
	end
end)
task.spawn(function()
        task0 = function()
                if Loops.SlapAll then
                        SlapAll()
                        wait(CPing(nil, true) / 2)
                end
                for i,v in pairs(Loops.Slaping) do
			if v and game:GetService("Players"):FindFirstChild(v) then
				local Target = game:GetService("Players"):FindFirstChild(v)
                                        Slap(Target)
                                        wait(.1)
			end
		end
        end
        while task.wait() do
                pcall(task0)
                if Unloaded then
                        break
                end
        end
end)
end
--Coming soon
