 -- Instances:
local ScreenGui = Instance.new("ScreenGui")
local Main = Instance.new("Frame")
local re2 = Instance.new("TextButton")
local re1 = Instance.new("TextButton")

--Properties:

ScreenGui.Parent = game.CoreGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.ResetOnSpawn = false

Main.Name = "Main"
Main.Parent = ScreenGui
Main.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
Main.BorderColor3 = Color3.fromRGB(255, 0, 0)
Main.BorderSizePixel = 2
Main.Position = UDim2.new(0.00485906005, 0, 0.609179854, 0)
Main.Size = UDim2.new(0.17087847, 0, 0.381620556, 0)

re2.Name = "re2"
re2.Parent = Main
re2.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
re2.Position = UDim2.new(0.0705073774, 0, 0.271171719, 0)
re2.Size = UDim2.new(0.858350694, 0, 0.453797489, 0)
re2.Visible = false
re2.Font = Enum.Font.Arcade
re2.Text = "Auto Respawn : On"
re2.TextColor3 = Color3.fromRGB(255, 255, 255)
re2.TextScaled = true
re2.TextSize = 14.000
re2.TextStrokeTransparency = 0.000
re2.TextWrapped = true

re1.Name = "re1"
re1.Parent = Main
re1.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
re1.Position = UDim2.new(0.0705073774, 0, 0.271171719, 0)
re1.Size = UDim2.new(0.858350694, 0, 0.453797489, 0)
re1.Font = Enum.Font.Arcade
re1.Text = "Auto Respawn"
re1.TextColor3 = Color3.fromRGB(255, 255, 255)
re1.TextScaled = true
re1.TextSize = 14.000
re1.TextStrokeTransparency = 0.000
re1.TextWrapped = true

-- Scripts Auto Respawn:
local SavedPositions = {AutoRe = nil; Crimpad = nil;}
local Connections = {Died = nil;}
local Camera = game:FindService("Workspace").CurrentCamera
local Rservice = game:GetService("RunService")
local Hbeat = Rservice.Heartbeat
local Rstep = Rservice.RenderStepped
local Stepped = Rservice.Stepped
local LocalPlayer = game.Players.localPlayer
local Teams = game.Teams

local LocTP = function(cframe)
	LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = cframe
end

function SaveCamPos()
	SavedPositions.OldCameraPos = Camera.CFrame
end
function LoadCamPos()
	Rstep:Wait()
	Camera.CFrame = SavedPositions.OldCameraPos or Camera.CFrame
end

function TeamEve(args)
  game.ReplicatedStorage.RemoteEvent:FireServer("ChangeTeam", args)
end

local waitfor = function(source, args, interval)
	local int = interval or 5
	local timeout = tick() + int
	repeat Stepped:Wait() until source:FindFirstChild(args) or tick() - timeout >=0
	timeout = nil
	if source:FindFirstChild(args) then
		return source:FindFirstChild(args)
	else
		return nil
	end
end

SavedPositions.AutoRe = nil
Connections.Died = nil
local lochar = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local function ondiedevent()
	coroutine.wrap(function()
		Connections.Died:Disconnect(); SaveCamPos()
		SavedPositions.AutoRe = lochar:WaitForChild("HumanoidRootPart", 1) and LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame; Camera.CameraType = Enum.CameraType.Track
    if autoRespawn then
        local locteam = LocalPlayer.Team
        if locteam == Teams.Prisoners then
            TeamEve(Teams.Neutral)
            TeamEve(Teams.Prisoners)
        elseif locteam == game.Teams.Police then
            TeamEve(Teams.Neutral)
            TeamEve(Teams.Police)
        end
    end
	end)()
end
getfenv()["\112\114\105\110\116"]("\70\73\88\69\68\32\66\89\32\72\49\55\83\51") 
local function charaddtask()
	Connections.Died:Disconnect()
	local LHuman = lochar:WaitForChild("Humanoid", 1)
	if LHuman then
		Connections.Died = LHuman.Died:Connect(ondiedevent)
	end
end
local function oncharadded()
	lochar = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
	if SavedPositions.AutoRe and autoRespawn then
		local LRoot = lochar:WaitForChild("HumanoidRootPart", 1)
		if LRoot then
			LRoot.CFrame = SavedPositions.AutoRe; LoadCamPos(); LRoot.CFrame = SavedPositions.AutoRe
			task.spawn(function()
				for i = 1, 4 do
					task.wait(); LRoot.CFrame = SavedPositions.AutoRe
				end
			end)
		end
	end
	lochar:WaitForChild("Humanoid", 1):SetStateEnabled(Enum.HumanoidStateType.FallingDown, false)
	lochar:WaitForChild("Humanoid", 1):SetStateEnabled(Enum.HumanoidStateType.Ragdoll, false)
  coroutine.wrap(charaddtask)()
end
Connections.Died = lochar:WaitForChild("Humanoid").Died:Connect(ondiedevent)
Connections.CharacterAdded = LocalPlayer.CharacterAdded:Connect(oncharadded)

-- Button Script:

local function MKANE_fake_script() -- re2.LocalScript 
	local script = Instance.new('LocalScript', re2)

	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Visible = false
		script.Parent.Parent.re1.Visible = true
		autoRespawn = false
	end)
end
coroutine.wrap(MKANE_fake_script)()
local function ARECQSO_fake_script() -- re1.LocalScript 
	local script = Instance.new('LocalScript', re1)

	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Text = "Auto Respawn : Off"
		script.Parent.Visible = false
		script.Parent.Parent.re2.Visible = true
		autoRespawn = true
	end)
end
coroutine.wrap(ARECQSO_fake_script)()
local function VYXMZ_fake_script() -- Main.drag 
	local script = Instance.new('LocalScript', Main)

	local UserInputService = game:GetService("UserInputService")
	
	local gui = script.Parent
	
	local dragging
	local dragInput
	local dragStart
	local startPos
	
	local function update(input)
		local delta = input.Position - dragStart
		gui.Position = gui:TweenPosition(UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y), 'Out', 'Linear', 0.09, true); -- drag speed
	end
	
	gui.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position
	
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	gui.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
	end)
end
coroutine.wrap(VYXMZ_fake_script)()
