for i,v in ipairs(game.CoreGui:GetChildren()) do
        if v.Name == "ScreenGui" then
                v:Destroy()
        end
end
local lib = loadstring(Game:HttpGet("https://raw.githubusercontent.com/NoobHubV1/NoobHubV1/main/Wizard%20Lib.lua"))()
local Window = lib:NewWindow("Anime Ball")
local Combat = Window:NewSection("Combat")
local Player = game.Players.LocalPlayer
local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
local TextLabel = Instance.new("TextLabel", ScreenGui)
local VIM = game:GetService("VirtualInputManager") or game:FindFirstDescendant("VirtualInputManager")
local AutoMove = false
local AutoParry = false
local Cooldown = tick()
local Method = "Keypress"
local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
local Toggle = Instance.new("TextButton", ScreenGui)
local SpamParry = false

ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.ResetOnSpawn = true

Toggle.BackgroundColor3 = Color3.fromRGB(50, 100, 150)
Toggle.BackgroundTransparency = 0
Toggle.Position = UDim2.new(0, 0, 0, 0)
Toggle.Size = UDim2.new(0, 180, 0, 40)
Toggle.Font = Enum.Font.SourceSans
Toggle.Text = "SpamParry [OFF]"
Toggle.TextColor3 = Color3.fromRGB(150, 100, 75)
Toggle.TextScaled = true
Toggle.TextSize = 15.000
Toggle.TextStrokeTransparency = 0.000
Toggle.TextWrapped = true
Toggle.Draggable = true
Toggle.Visible = false
Toggle.MouseButton1Click:Connect(function()
     SpamParry = not SpamParry
     if SpamParry then
           Toggle.Text = "SpamParry [ON]"
     elseif not SpamParry then
           Toggle.Text = "SpamParry [OFF]"
     end
end)

function GetBall()
  for i,v in next, workspace.Balls:GetChildren() do
    return v
  end
end

function GetRoot()
  for i,v in ipairs(game.Players.LocalPlayer.Character:GetChildren()) do
    if v:IsA("BasePart") and v.Name == "HumanoidRootPart" then
      return v
    end
  end
end

function ParryAttempt()
  if Method == "Keypress" then
          VIM:SendKeyEvent(true, "F", false, game)
  elseif Method == "Click" then
          VIM:SendMouseButtonEvent(0, 0, 0, true, game, false)
  elseif Method == "Remote" then
          game.ReplicatedStorage.Framework.RemoteFunction:InvokeServer("SwordService","Block",{0})
  end
end

function t(Title, Text, Time)
    game:FindService("StarterGui"):SetCore("SendNotification",{Title=Title,Text=Text,Icon="",Duration=Time,})
end

Combat:CreateDropdown("Parry Method", {"Keypress","Click","Remote"}, 1, function(select)
       Method = select
end)

Combat:CreateToggle("Auto Parry", function(state)
       AutoParry = state
end)

Combat:CreateToggle("Manual Spam", function(state)
       Toggle.Visible = state
end)

Combat:CreateToggle("Auto Move", function(state)
       AutoMove = state
end)
workspace.Balls.ChildAdded:Connect(function()
        if Parried then
                Parried = false
        end
end)
spawn(function()
    function Parry()
    local Ball, HRP = GetBall(), GetRoot()
    if not Ball or not HRP then
      return
    end
    
    local Speed = Ball.LinearVelocity.VectorVelocity.Magnitude
    local Distance = (HRP.Position - Ball.Position).Magnitude

    if Ball.BallHighlight2.Enabled and not Parried and Speed / Distance >= 1.7 and AutoParry then
      Parried = true
      ParryAttempt()
      Cooldown = tick()
      if (tick() - Cooldown) >= 1 then
             Parried = false
      end
      while Parried do
              if not Ball.BallHighlight2.Enabled then
                      Parried = false
                      break
              end
              wait()
      end
    end
    end
while wait() do
    pcall(Parry)
end
end)
game.RunService.Stepped:Connect(function()
     if SpamParry then
           ParryAttempt()
     end
end)
game.RunService.Heartbeat:Connect(function()
     local Ball, humanoid = GetBall(), Player.Character.Humanoid
     if not Ball or not humanoid then return end
     if Ball and humanoid and AutoMove then
            humanoid:MoveTo(Ball.Position)
     end
end)
