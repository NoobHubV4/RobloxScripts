for i,v in ipairs(game.CoreGui:GetChildren()) do
        if v.Name == "ScreenGui" then
                v:Destroy()
        end
end
local lib = loadstring(Game:HttpGet("https://raw.githubusercontent.com/NoobHubV1/NoobHubV1/main/Wizard%20Lib.lua"))()
local Window = lib:NewWindow("Anime Ball")
local Combat = Window:NewSection("Combat")
local Settings = Window:NewSection("Settings")
local Player = game.Players.LocalPlayer
local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
local TextLabel = Instance.new("TextLabel", ScreenGui)
local VIM = game:GetService("VirtualInputManager") or game:FindFirstDescendant("VirtualInputManager")
local AutoMove = false
local AutoParry = false
local Cooldown = tick()
local Method = "Keypress"
local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
local Toggle = Instance.new("TextButton", ScreenGui)
local SpamParry = false
local Connection
local ParryMulti = 1.85
local part

ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.ResetOnSpawn = true

Toggle.BackgroundColor3 = Color3.fromRGB(50, 100, 150)
Toggle.BackgroundTransparency = 0
Toggle.Position = UDim2.new(0, 0, 0, 0)
Toggle.Size = UDim2.new(0, 180, 0, 40)
Toggle.Font = Enum.Font.SourceSans
Toggle.Text = "SpamParry [OFF]"
Toggle.TextColor3 = Color3.fromRGB(150, 100, 75)
Toggle.TextScaled = true
Toggle.TextSize = 15.000
Toggle.TextStrokeTransparency = 0.000
Toggle.TextWrapped = true
Toggle.Draggable = true
Toggle.Visible = false
Toggle.MouseButton1Click:Connect(function()
     SpamParry = not SpamParry
     if SpamParry then
           Toggle.Text = "SpamParry [ON]"
     elseif not SpamParry then
           Toggle.Text = "SpamParry [OFF]"
     end
end)

function GetBall()
  for i,v in next, workspace.Balls:GetChildren() do
    return v
  end
end

function GetRoot()
  for i,v in ipairs(game.Players.LocalPlayer.Character:GetChildren()) do
    if v:IsA("BasePart") and v.Name == "HumanoidRootPart" then
      return v
    end
  end
end

function ParryAttempt()
  if Method == "Keypress" then
          VIM:SendKeyEvent(true, "F", false, game)
  elseif Method == "Click" then
          VIM:SendMouseButtonEvent(0, 0, 0, true, game, false)
  elseif Method == "Remote" then
          game.ReplicatedStorage.Framework.RemoteFunction:InvokeServer("SwordService","Block",{0}) --Remote not visible block and animation
  end
end

function ResetConnection()
  if Connection then
    Connection:Disconnect()
    Connection = nil
  end
end

function t(Title, Text, Time)
    game:FindService("StarterGui"):SetCore("SendNotification",{Title=Title,Text=Text,Icon="",Duration=Time,})
end

function createHitbox()
    part = Instance.new("Part") 
    part.Name = "PFA" 
    part.Parent = game.workspace 
    part.CFrame = Player.Character.HumanoidRootPart.CFrame
    part.Size = Vector3.new(5, 0, 5) 
    part.Anchored = 1 
    part.Reflectance = 1
    part.CanCollide = false
    part.Transparency = 0
    part.Color = Color3.fromRGB(0, 0, 0)
    part.Material = Enum.Material.ForceField
end

Combat:CreateDropdown("Parry Method", {"Keypress","Click","Remote"}, 1, function(select)
       Method = select
end)

Combat:CreateToggle("Auto Parry", function(state)
       AutoParry = state
       if AutoParry then
              createHitbox()
       else
              part:Destroy()
              part = nil
       end
end)

Combat:CreateToggle("Manual Spam", function(state)
       Toggle.Visible = state
end)

Combat:CreateToggle("Auto Move", function(state)
       AutoMove = state
end)
Settings:CreateButton("Parry Distance + 0.05 Multiplier", function()
       ParryMulti = ParryMulti + 0.05
       t("Successfully", "Parry Distance "..ParryMulti.." Multiplier", 0)
end)
Settings:CreateButton("Parry Distance - 0.05 Multiplier", function()
       if ParryMulti > 0 then
              ParryMulti = ParryMulti - 0.05
              t("Successfully", "Parry Distance "..ParryMulti.." Multiplier", 0)
       end
end)
workspace.Balls.ChildAdded:Connect(function()
        local Ball = GetBall()
        if not Ball then return end
        ResetConnection()
        Connection = Ball:GetAttributeChangedSignal("Target"):Connect(function()
               Parried = false
        end)
end)
game.RunService.PreSimulation:Connect(function()
    local Ball, HRP = GetBall(), GetRoot()
    if not Ball or not HRP then return end
    if Ball:GetAttribute("Target") == Player.Name and not Parried and Ball.LinearVelocity.VectorVelocity.Magnitude / (HRP.Position - Ball.Position).Magnitude >= ParryMulti and AutoParry then
      ParryAttempt()
      Parried = true
      Cooldown = tick()
      if (tick() - Cooldown) >= 1 then
             Parried = false
      end
    end
end)
game.RunService.Stepped:Connect(function()
     if SpamParry then
           ParryAttempt()
     end
end)
game.RunService.Heartbeat:Connect(function()
     local Ball, humanoid = GetBall(), Player.Character.Humanoid
     if not Ball or not humanoid then return end
     if Ball and humanoid and AutoMove then
            humanoid:MoveTo(Ball.Position)
     end
end)
game.RunService.Heartbeat:Connect(function()
     local Ball = GetBall()
     local speed = Ball.LinearVelocity.VectorVelocity.Magnitude / ParryMulti
     if not Ball and part then
        part.Size = Vector3.new(5, 5, 5)
        part.CFrame = GetRoot().CFrame
     end
     if Ball and speed and part then
            part.Size = Vector3.new(speed, speed, speed)
            part.CFrame = GetRoot().CFrame
     end
end)
