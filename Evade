local Library = loadstring(Game:HttpGet('https://raw.githubusercontent.com/NoobHubV1/NoobHubV1/main/Wizard%20Lib.lua'))()
local Window = Library:NewWindow("Evade")
local Rstorage = game.ReplicatedStorage
local Players = game.Players
local plr = Players.LocalPlayer
local Main = Window:NewSection("Main")
local autoRespawn
local SavedPositions = {AutoRe = nil; OldCameraPos = nil}
local Camera = workspace.Camera

local connection
local sharedConnection
local hudAddedConnection

local function disconnectAll()
    if connection then
        connection:Disconnect()
        connection = nil
    end
    if sharedConnection then
        sharedConnection:Disconnect()
        sharedConnection = nil
    end
    if hudAddedConnection then
        hudAddedConnection:Disconnect()
        hudAddedConnection = nil
    end
end

function SaveCamPos()
	SavedPositions.OldCameraPos = Camera.CFrame
end
function LoadCamPos()
	Camera.CFrame = SavedPositions.OldCameraPos or Camera.CFrame
end

function TP(cframe)
    plr.Character.HumanoidRootPart.CFrame = cframe
end

local function setupHUDListener(hud)
    if not hud then return end

    if connection then
        connection:Disconnect()
        connection = nil
    end

    connection = hud:GetPropertyChangedSignal("Visible"):Connect(function()
        if not hud.Visible and autoRespawn then
            SavedPositions.AutoRe = plr.Character:WaitForChild("HumanoidRootPart", 1) and plr.Character:FindFirstChild("HumanoidRootPart").CFrame; SaveCamPos()
            Rstorage.Events.Player.ChangePlayerMode:FireServer(true)
        end
    end)
end

local function listenToShared(shared)
    if not shared then return end

    local hud = shared:FindFirstChild("HUD")
    if hud then
        setupHUDListener(hud)
    end

    if hudAddedConnection then
        hudAddedConnection:Disconnect()
        hudAddedConnection = nil
    end
    hudAddedConnection = shared.ChildAdded:Connect(function(child)
        if child.Name == "HUD" then
            setupHUDListener(child)
        end
    end)
end

local function listenToPlayerGui()
    local playerGui = plr:FindFirstChild("PlayerGui")
    if not playerGui then return end

    local shared = playerGui:FindFirstChild("Shared")
    if shared then
        listenToShared(shared)
    end

    if sharedConnection then
        sharedConnection:Disconnect()
        sharedConnection = nil
    end
    sharedConnection = playerGui.ChildAdded:Connect(function(child)
        if child.Name == "Shared" then
            listenToShared(child)
        end
    end)
end
local function oncharadded()
	lochar = plr.Character or plr.CharacterAdded:Wait()
	if SavedPositions.AutoRe and autoRespawn then
		local LRoot = lochar:WaitForChild("HumanoidRootPart", 1)
		if LRoot then
			LRoot.CFrame = SavedPositions.AutoRe; LoadCamPos(); LRoot.CFrame = SavedPositions.AutoRe
			task.spawn(function()
				for i = 1, 5 do
					task.wait(); LRoot.CFrame = SavedPositions.AutoRe
				end
			end)
		end
	end
end
Main:CreateButton("Refresh", function()
     local tmp = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame; SavedPositions.AutoRe = tmp; SaveCamPos()
     Rstorage.Events.Player.ChangePlayerMode:FireServer(true)
     plr.CharacterAdded:Wait()
     TP(tmp)
     for i = 1,5 do
         task.wait(); TP(tmp)
     end; LoadCamPos()
end)
Main:CreateToggle("Auto Respawn", function(value)
     autoRespawn = value
     if autoRespawn then
        listenToPlayerGui()
     else
        disconnectAll()
     end
end)
plr.CharacterAdded:Connect(oncharadded)
